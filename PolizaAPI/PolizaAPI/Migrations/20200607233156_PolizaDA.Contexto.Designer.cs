// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolizaDA;

namespace PolizaAPI.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20200607233156_PolizaDA.Contexto")]
    partial class PolizaDAContexto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PolizaDA.Modelos.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            Email = "yonan.cano@gmail.com",
                            Nombre = "Yonan Cano"
                        },
                        new
                        {
                            IdCliente = 2,
                            Email = "lorena.munoz@gmail.com",
                            Nombre = "Lorena Muñozñoz"
                        });
                });

            modelBuilder.Entity("PolizaDA.Modelos.Poliza", b =>
                {
                    b.Property<int>("IdPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("InicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PeriodoCobertura")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PorcentajeCobertura")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("TipoCubrimiento")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TipoRiesgo")
                        .HasColumnType("tinyint");

                    b.HasKey("IdPoliza");

                    b.HasIndex("IdCliente");

                    b.ToTable("Polizas");

                    b.HasData(
                        new
                        {
                            IdPoliza = 1,
                            Descripcion = "Permite la cobertura del cliente: Yonan Cano en caso relacionado con un Terremoto",
                            IdCliente = 1,
                            InicioVigencia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Poliza 001",
                            PeriodoCobertura = (byte)10,
                            PorcentajeCobertura = (byte)15,
                            Precio = 900000m,
                            TipoCubrimiento = (byte)1,
                            TipoRiesgo = (byte)1
                        },
                        new
                        {
                            IdPoliza = 2,
                            Descripcion = "Permite la cobertura del cliente: Lorena Muñoz en caso relacionado con un Incendio",
                            IdCliente = 2,
                            InicioVigencia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Poliza 002",
                            PeriodoCobertura = (byte)10,
                            PorcentajeCobertura = (byte)82,
                            Precio = 1500000m,
                            TipoCubrimiento = (byte)2,
                            TipoRiesgo = (byte)2
                        },
                        new
                        {
                            IdPoliza = 3,
                            Descripcion = "Permite la cobertura del cliente: John Doe en caso relacionado con un Robo",
                            IdCliente = 2,
                            InicioVigencia = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Poliza 003",
                            PeriodoCobertura = (byte)6,
                            PorcentajeCobertura = (byte)50,
                            Precio = 3250000m,
                            TipoCubrimiento = (byte)3,
                            TipoRiesgo = (byte)4
                        });
                });

            modelBuilder.Entity("PolizaDA.Modelos.Poliza", b =>
                {
                    b.HasOne("PolizaDA.Modelos.Cliente", "Cliente")
                        .WithMany("MisPolizas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
